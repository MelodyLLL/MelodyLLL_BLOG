import{_ as c,f as l,o as i,c as r,g as n,h as s,i as a,w as o,a as e}from"./app-abb8a49b.js";const u={},d=e(`<h1 id="升级-webpack5" tabindex="-1"><a class="header-anchor" href="#升级-webpack5" aria-hidden="true">#</a> 升级 webpack5</h1><h2 id="webpack-基本配置" tabindex="-1"><a class="header-anchor" href="#webpack-基本配置" aria-hidden="true">#</a> webpack 基本配置</h2><p>公司的 web 项目构建工具还是使用的 webpack3，热更新功能时好时坏，配置也比较混乱，而且无法使用 babel7 解析 es11 的一些语法。本次记录下关于 webpack 的一次升级。</p><p>首先是基本的 webpack5 大核心模块 <strong><em>entry、output、module、plugins、mode</em></strong></p><h3 id="entry" tabindex="-1"><a class="header-anchor" href="#entry" aria-hidden="true">#</a> entry</h3><p>对于 entry，还有一个属性 context 可以提一下，这是一个基础目录属性，因为我们一般在企业里面的项目会把配置文件放到一个单独的 config 文件夹下面。比如此时我当前的配置就是 app/webpack_config， app/src，这里还有一个比较常见的东西是这个 nodejs api: path.resolve「会把一个路径或路径片段的序列解析为一个绝对路径」，在下面就是__dirname 当前 config 目录 + ../ 往上一层。</p><p>我们可以像下面一样</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>
 <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">main</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&quot;..&quot;</span><span class="token punctuation">,</span>src<span class="token operator">/</span>main<span class="token punctuation">.</span>js&#39;<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以先定义基础目录</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

 <span class="token literal-property property">context</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
 <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">app</span><span class="token operator">:</span> <span class="token string">&#39;src/main.js&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),k=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;src/main.js&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;babel-polyfill&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里升级后变化不大</p><h3 id="output" tabindex="-1"><a class="header-anchor" href="#output" aria-hidden="true">#</a> output</h3><p>这块比较常用的有 👇 几个属性</p><ul><li>path: 文件的输出目录</li><li>filename: 非异步加载的 bundle 名称</li><li>chunkFilename: 异步加载的 bundle 名称</li><li>publicPath: 设置引用 css，js，img 等资源时候的一个基础路径</li><li>clean: 在生成文件之前清空 output 目录</li></ul>`,5),v={href:"https://webpack.docschina.org/guides/caching#root",target:"_blank",rel:"noopener noreferrer"},m=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">publicPath</span><span class="token operator">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// clean: true 交给rimraf</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;static/js/[name]-[contenthash:8].js&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">chunkFilename</span><span class="token operator">:</span> <span class="token string">&#39;static/js/[name]-bundle-[contenthash:8].js&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这一块升级后变化也不大</p><h3 id="module" tabindex="-1"><a class="header-anchor" href="#module" aria-hidden="true">#</a> module</h3><p>这是更新后的配置，这里需要注意的是两点</p>`,4),b=n("li",null,"webpack5 的资源模块代替了之前需要安装的 url-loader,file-loader。因此我们可以删除这些依赖。",-1),g={href:"https://vue-loader.vuejs.org/zh/migrating.html#%E7%8E%B0%E5%9C%A8%E4%BD%A0%E9%9C%80%E8%A6%81%E4%B8%80%E4%B8%AA%E6%8F%92%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"},h=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code> <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.vue$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;vue-loader&#39;</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">exclude</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">node_modules</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(png|jpe?g|gif|svg)(\\?.*)?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">generator</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;static/img/[name].[hash:7].[ext]&#39;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// parser: {</span>
        <span class="token comment">//   dataUrlCondition: {</span>
        <span class="token comment">//     maxSize: 10 * 1024 // 超过10kb的进行复制，不超过则直接使用base64</span>
        <span class="token comment">//   }</span>
        <span class="token comment">// }</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(mp4|webm|ogg|mp3|wav|flac|aac)(\\?.*)?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">generator</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;media/[name].[hash:7].[ext]&#39;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(woff2?|eot|ttf|otf)(\\?.*)?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;asset/resource&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 指定静态资源类复制</span>
        <span class="token literal-property property">generator</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;static/fonts/[name].[hash:7].[ext]&#39;</span> <span class="token comment">// 放入font目录下</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),f=e('<h3 id="plugins" tabindex="-1"><a class="header-anchor" href="#plugins" aria-hidden="true">#</a> plugins</h3><p>插件的更替较多，但是用法基本没有变化，直接实例化 webpack 内置的或者安装对应的依赖，我们项目中使用到的一些插件</p><ul><li>ModuleConcatenationPlugin,HashedModuleIdsPlugin webpack5 已内置</li><li>从 webpack v4 开始，移除了 CommonsChunkPlugin，取而代之的是 optimization.splitChunks</li><li>css 抽取从 ExtractTextPlugin 替换为了 MiniCssExtractPlugin</li><li>css 压缩从 OptimizeCSSPlugin 替换为 CssMinimizerPlugin，js 压缩从 UglifyJsPlugin 更新到了 webpack 内置的 TerserPlugin</li><li>其他常用插件升级后仅有一些传参变化的如 HtmlWebpackPlugin、CopyWebpackPlugin、DefinePlugin、BundleAnalyzerPlugin、CompressionWebpackPlugin</li><li>新加入 VueLoaderPlugin、WebpackBar</li><li>另外如 DllPlugin 发现使用后构建速度提升十多秒，并没有很大的提升</li></ul>',3),y=e(`<div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>(node:81863) [DEP_WEBPACK_COMPILATION_ASSETS] DeprecationWarning: Compilation.assets will be frozen in future, all modifications are deprecated. BREAKING CHANGE: No more changes should happen to Compilation.assets after sealing the Compilation. Do changes to assets earlier, e. g. in Compilation.hooks.processAssets. Make sure to select an appropriate stage from Compilation.PROCESS<em>ASSETS_STAGE</em>*. (Use <code>node --trace-deprecation ...</code> to show where the warning was created)</p></div><h3 id="mode" tabindex="-1"><a class="header-anchor" href="#mode" aria-hidden="true">#</a> mode</h3><ul><li>这里主要是使用 webpack-merge 来做配置文件的拆分，如压缩以及 css 提取等不需要在测试环境打开，注意 webpack-merge 在 5 里面的引用方式需要进行解构了</li><li>另外就是单独定义了一些环境变量传入到 DefinePlugin</li><li>老项目的启动方式是编程式的 node build-test.js 与 build.js 以此来分别执行不同的 config，这样定制化程度确实高一些但是也更麻烦，需要安装更多额外的依赖，大概如下这样</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span>
<span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./check-versions&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">=</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> ora <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;ora&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> rm <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;rimraf&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> chalk <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;chalk&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../config&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> webpackConfig <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./webpack.prod.conf&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> spinner <span class="token operator">=</span> <span class="token function">ora</span><span class="token punctuation">(</span><span class="token string">&#39;building for production...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
spinner<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">rm</span><span class="token punctuation">(</span>
	path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>build<span class="token punctuation">.</span>assetsRoot<span class="token punctuation">,</span> config<span class="token punctuation">.</span>build<span class="token punctuation">.</span>assetsSubDirectory<span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
		<span class="token function">webpack</span><span class="token punctuation">(</span>webpackConfig<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> stats</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			spinner<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
			process<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>
				stats<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
					<span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
					<span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
					<span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// If you are using ts-loader, setting this to true will make TypeScript errors show up during build.</span>
					<span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
					<span class="token literal-property property">chunkModules</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;\\n\\n&#39;</span>
			<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>stats<span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token string">&#39;  Build failed with errors.\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">cyan</span><span class="token punctuation">(</span><span class="token string">&#39;  Build complete.\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
				chalk<span class="token punctuation">.</span><span class="token function">yellow</span><span class="token punctuation">(</span>
					<span class="token string">&#39;  Tip: built files are meant to be served over an HTTP server.\\n&#39;</span> <span class="token operator">+</span>
						<span class="token string">&quot;  Opening index.html over file:// won&#39;t work.\\n&quot;</span>
				<span class="token punctuation">)</span>
			<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h3><p>除了这些基础模块，其他如 resolve,devtool,devServer 也都有相应的参数变化。尤其是新增的 optimization 模块</p><h2 id="babel-配置" tabindex="-1"><a class="header-anchor" href="#babel-配置" aria-hidden="true">#</a> babel 配置</h2>`,7),x={href:"https://babeljs.io/docs/v7-migration",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"package.json",-1),w=n("code",null,".babelrc",-1),j={href:"https://github.com/vuejs/babel-plugin-transform-vue-jsx",target:"_blank",rel:"noopener noreferrer"},E=n("h2",{id:"总结",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#总结","aria-hidden":"true"},"#"),s(" 总结")],-1),C=n("ul",null,[n("li",null,"升级构建配置，可以重新拉一个仓库和新分支，因为要重新 npm i 替换大量依赖，这样比较方便"),n("li",null,"一定要检查所有的包是否都有更新，不然有一些还未升级的包会导致各种莫名其妙的错误"),n("li",null,"vue 可以直接使用 vite 构建，这样开发构建带来的体验冲击感会更大...，虽然社区可能没有那么的完善，但是其实常规项目都够用了"),n("li",null,[s("还有一些关于 postcss scss 相关的变化，mac 可能会因为 node-sass 版本原因出现诸如此类的报错"),n("div",{class:"custom-container danger"},[n("p",{class:"custom-container-title"},"DANGER"),n("p",null,"Node Sass does not yet support your current environment: OS X Unsupported architecture (arm64) with Unsupported runtime (102)")])])],-1);function P(S,A){const t=l("font"),p=l("ExternalLinkIcon");return i(),r("div",null,[d,n("p",null,[s("一般我们的应用都是 web 单页应用，最简单的方式是直接传入字符串即可。默认入口 bundle 打出来的名称是 main，也可以像 👆 一样使用对象自定义命名，这里还要提到直接传入一个"),a(t,{color:"#dd0000"},{default:o(()=>[s("[string]字符串数组形式的也是单页面入口应用的定义方式")]),_:1}),s("，如我们引入 babel-polyfill 像这样")]),k,n("p",null,[s("下面是我的配置，其中 contenthash 是为了做网页缓存的，具体可以参考 "),n("a",v,[s("webpack 缓存"),a(p)])]),m,n("ul",null,[b,n("li",null,[s("另外就是关于"),n("a",g,[s("Vue Loader v15 的变化"),a(p)])])]),h,a(t,{color:"#dd0000"},{default:o(()=>[s("注意一定要升级所有的 loader！mini-css-extract-plugin 一开始总是无法正常抽取懒加载路由中的 css 发现是 css-loader 为 0.28.0 版本太低导致")]),_:1}),f,a(t,{color:"#dd0000"},{default:o(()=>[s("注意一定要升级所有的插件，下面的这个 warning 就是因为 CopyWebpackPlugin 还在 v4.x 导致的，找了很久的原因")]),_:1}),y,n("p",null,[s("babel7 的改变比较大，最明显的是包名的变化，v7 的包名都变成了@babel/xxx，参考"),n("a",x,[s("官方指南"),a(p)]),s("，里面有提到 babel-upgrade 工具可进行自动升级，会替换"),_,s(" 与"),w,s("中的配置，参考文档可以看到 @babel/preset-env 替换了之前零散的预设，Stage Preset 包 和 polyfill 的引入也进行了变更。"),a(t,{color:"#dd0000"},{default:o(()=>[s("另外要注意 babel-plugin-transform-vue-jsx 对 babel7 的适配，因为有可能出现相关的报错。")]),_:1}),s("看到 "),n("a",j,[s("babel-plugin-transform-vue-jsx"),a(p)]),s(" 推荐的是 v4.x 的版本")]),E,C])}const q=c(u,[["render",P],["__file","Engineering3.html.vue"]]);export{q as default};
